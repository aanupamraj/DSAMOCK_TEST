public class Stack {

    private int maxSize;      // Maximum size of the stack
    private int top;          // Index of the top element
    private int[] stackArray; // Array to store the elements

    // Constructor
    public Stack(int size) {
        maxSize = size;
        stackArray = new int[maxSize];
        top = -1; // Initialize top as -1 to indicate an empty stack
    }

    // Push an element onto the stack
    public void push(int value) {
        if (isFull()) {
            System.out.println("Stack is full. Cannot push element.");
        } else {
            top++;
            stackArray[top] = value;
            System.out.println("Pushed " + value + " onto the stack.");
        }
    }

    // Pop the top element from the stack and return it
    public int pop() {
        if (isEmpty()) {
            System.out.println("Stack is empty. Cannot pop element.");
            return -1; // Return -1 to indicate an empty stack or error condition
        } else {
            int poppedValue = stackArray[top];
            top--;
            return poppedValue;
        }
    }

    // Check if the stack is empty
    public boolean isEmpty() {
        return (top == -1);
    }

    // Check if the stack is full
    public boolean isFull() {
        return (top == maxSize - 1);
    }

    // Get the top element of the stack without removing it
    public int peek() {
        if (isEmpty()) {
            System.out.println("Stack is empty. No top element.");
            return -1; // Return -1 to indicate an empty stack or error condition
        } else {
            return stackArray[top];
        }
    }

    // Get the size of the stack
    public int size() {
        return top + 1;
    }

    // Clear the stack (remove all elements)
    public void clear() {
        top = -1;
    }
}


Stack stack = new Stack(5);

stack.push(10);
stack.push(20);
stack.push(30);

System.out.println("Top element: " + stack.peek()); // Output: 30

int poppedElement = stack.pop();
System.out.println("Popped element: " + poppedElement); // Output: 30

System.out.println("Is stack empty? " + stack.isEmpty()); // Output: false

stack.clear();

System.out.println("Is stack empty? " + stack.isEmpty()); // Output: true
